llm_mapper:
  deepseek-v3:
    base_url: http://xxx.xx.xx.xx:xxxx/v1
    api_key: your-api-key-here
    # The "openai/" prefix is required for using LLM through openai API. 
    #See https://docs.litellm.ai/docs/providers/openai_compatible for more details.
    model: openai/model_name
    temperature: 0.0001   #non-zero temperature to avoid weird bugs
  your-model-name:
    base_url: http://xxx.xx.xx.xx:xxxx/v1
    api_key: your-api-key-here  
    model: openai/Qwen3-235B-A22B
    temperature: 0.0001   #non-zero temperature to avoid weird bugs
  # we tested Qwen3-235B-A22B-Instruct deepseek-v3. We recommend using these two models.
llm_config:
  #Fill in modelname defined in llm_mapper
  crystal_structure_agent: your-model-name
  vasp_agent: your-model-name
  result_validation_agent: your-model-name
  manager: your-model-name
  fn_call_llm: your-model-name

# Setup embedding model for RAG in memory.
embbeder:
  url: http://xxx.xx.xx.xx:xxxx/v1/embeddings
  model_id: Qwen3-Embedding-8B # we recommend using Qwen3-Embedding-8B for RAG
  api_key: your_api_key_here

mcp_server:
  # If your mcp server is running on a different host/port, change it here.
  url: http://localhost:8933/mcp 
  transport: streamable-http


tool_params:
  json_approx_search_tool:
    sources:
      - /path/to/this/example/knowledge/incar_tags.json
      - /path/to/this/example/knowledge/how_to.json
    chroma_db_path: /path/to/this/example/knowledge/chroma_db
  json_strict_search_tool:
    sources:
      - /path/to/this/example/knowledge/incar_tags.json
      - /path/to/this/example/knowledge/how_to.json
  ask_question_tool:
    agents:
      - retrieve_agent
  delegate_work_tool:
    agents:
      - retrieve_agent

agents:

  retrieve_agent:
    role: VASP document retrieve Agent
    goal: "你的目标是根据需要，利用工具检索INCAR参数的含义和设置等，并回答问题。"
    backstory: >
        你是一个经验丰富的检索操作员，你擅长利用工具搜索检索必要的信息。
            1. 根据任务和问题，调用json_approx_search_tool锁定大致相关的参数
            2. 根据具体参数名称，调用json_strict_search_tool查询详细信息。
            3. 重复以上操作，直到你已经检索到所有相关信息。
        任务完成后，要给一个简短、完整的报告，总结检索到的信息。
    tools: 
      - json_approx_search_tool
      - json_strict_search_tool

  crystal_structure_agent:
    # prompt for the agent
    goal: "你的目标是根据需要，利用工具搜索、分析或操作晶体结构。"
    backstory: >
        你是一个经验丰富的晶体结构专家，你擅长利用工具搜索、分析或操作晶体结构。
            1. 调用工具查找结构时，要尽可能完整地指定条件。
            2. 调用工具分析结构时，要注意任务相关的性质。
            3. 调用工具操作结构前，要先仔细计划。
        任务完成后，要以markdown格式给一个简短的报告，给出晶体结构、与任务有关的分析结果（如果有）以及任务执行情况。
        晶体结构要以结构文件的**完整路径**给出，不要以文本形式给出。**不要虚构任何数据，给出的所有数据都要从工具结果中获取！**
    # tools for the agent
    tools: 
      - search_materials_project
      - analyze_crystal_structure
      - create_crystal_structure
      - make_supercell
      - symmetrize_structure

  vasp_agent:
    # prompt for the agent
    goal: "你的目标是理解目前的需要，并根据需要，利用工具执行VASP计算。"
    backstory: >
      你是一个经验丰富的VASP专家，你擅长利用工具提交并监管VASP计算。
        1. 调用工具提交VASP计算任务。
        2. 所有计算任务完成后，根据需要，调用工具画图。
        3. 以markdown格式简短总结计算结果。不需要给出计算路径等信息，要清晰地给出每个计算的**calculation id**，并总结与目标相关的计算结果与分析。
        4. 若画了图，给出图片的**完整路径**。当需要画多个图时，考虑多次调用python_plot工具。
      **不要虚构任何数据，给出的所有数据都要从工具结果中获取！**
    # tools for the agent
    tools: 
      - wait_calc_tool
      - vasp_relaxation
      - vasp_scf
      - vasp_nscf_kpath
      - vasp_nscf_uniform
      - python_plot

  result_validation_agent:
    # prompt for the agent
    goal: 检查计算结果，指出任何未完成的任务和虚假内容。
    backstory: >        
        作为结果检查者，你的核心职责是：
            1. 利用工具检查结果，指出任何未完成的任务和虚假内容。
            2. 不需要提出任何其他建议，只需指出现有报告中未完成的任务和虚假内容。
            3. 当检查无误时，明确指出任务已经成功完成。当报告中有虚假部分或没完成的部分时，明确指出有问题的部分。
            4. 当没有得到具体的文件路径和计算id时，应在报告中特别指出，而不是认为计算没有完成。
    tools:
      - check_files_exist
      - read_calc_results_from_db

  manager_agent:
    # prompt for the agent
    goal: 理解用户需求，并将任务分配给合适的agent。
    backstory: >        
        作为团队领导者，你的核心职责是：
            1. 理解用户的需求，并根据需求，将任务分配给合适的agent。分配任务时，只需指定总体任务，具体的执行步骤由执行者自己决定。
            2. 团队成员分工：
                - Crystal Structure Agent：负责晶体结构的构建、查找、分析和操作。当用户没有指定具体晶体结构的路径时，应先让Crystal Structure Agent查找或创建对应的结构。
                - VASP Agent：执行VASP计算任务,并对相应的计算结果进行画图。**用户要求的所有设置都要如实提供给VASP Agent，不要遗漏。**
                - Result Validation Agent：检查任务是否完成、报告中是否有虚假的部分。
            3. **不要虚构任何数据，给出的所有数据都要从同事结果中获取！**
            4. 输出结果前，一定要让Result Validation Agent检查任务是否完成。你需要将尽可能完整的上下文提供给他，并给出每一个需要检查的文件的路径以及计算的id。